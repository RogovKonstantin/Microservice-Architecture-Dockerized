version: "3.8"

services:
  opensearch:
    image: opensearchproject/opensearch:2.9.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
      - OPENSEARCH_SECURITY_ENABLED=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"

  kibana:
    image: opensearchproject/opensearch-dashboards:2.9.0
    container_name: kibana
    environment:
      OPENSEARCH_HOSTS: "http://opensearch:9200"
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    ports:
      - "5601:5601"
    depends_on:
      - opensearch

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.3
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/ > /dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - opensearch

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  domain:
    build:
      context: ./domain
      dockerfile: Dockerfile
    container_name: domain
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      logstash:
        condition: service_started
      opensearch:
        condition: service_started
      kibana:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      GRPC_SERVER_PORT: 8081

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    depends_on:
      domain:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
      logstash:
        condition: service_healthy
      opensearch:
        condition: service_started
      kibana:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      DOMAIN_GRPC_HOST: domain
      DOMAIN_GRPC_PORT: 8081
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq

volumes:
  postgres_data:
